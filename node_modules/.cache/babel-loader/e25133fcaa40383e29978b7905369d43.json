{"ast":null,"code":"var _jsxFileName = \"/Users/infinity/GitHub/COVID-19/src/components/Charts/Charts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nfunction Charts({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const ftdata = await fetchDailyData();\n      setDailyData(ftdata);\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255,0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n}\n\nexport default Charts;","map":{"version":3,"sources":["/Users/infinity/GitHub/COVID-19/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","ftdata","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA8B,WAA9B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA,IAAI,EAAG;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAAR;AAAwCC,EAAAA;AAAxC,CAAhB,EAAkE;AAE9D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMa,QAAQ,GAAG,YAAY;AACzB,YAAMC,MAAM,GAAG,MAAMb,cAAc,EAAnC;AACAW,MAAAA,YAAY,CAACE,MAAD,CAAZ;AACH,KAHD;;AAMJD,IAAAA,QAAQ;AAEP,GATQ,EASP,EATO,CAAT;AAWA,QAAME,SAAS,GACXJ,SAAS,CAACK,MAAV,gBAEI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAG;AACHC,MAAAA,MAAM,EAAEN,SAAS,CAACO,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADL;AAEHC,MAAAA,QAAQ,EAAE,CAAC;AACPd,QAAAA,IAAI,EAAEK,SAAS,CAACO,GAAV,CAAc,CAAC;AAACX,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADC;AAEPc,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKR;AACEjB,QAAAA,IAAI,EAAEK,SAAS,CAACO,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADR;AAEEa,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEE,QAAAA,eAAe,EAAC,mBAJlB;AAKED,QAAAA,IAAI,EAAE;AALR,OALQ;AAFP,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAkBM,IAnBV;AAuBA,QAAME,QAAQ,GACVlB,SAAS,gBAEL,oBAAC,GAAD;AACI,IAAA,IAAI,EAAI;AACJU,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAE,QADD;AAENG,QAAAA,eAAe,EAAE,CACb,sBADa,EAEb,sBAFa,EAGb,qBAHa,CAFX;AAONlB,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACmB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmClB,MAAM,CAACkB,KAA1C;AAPC,OAAD;AAFL,KADZ;AAcI,IAAA,OAAO,EAAI;AACPC,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADD;AAEPC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAE,oBAAmBpB,OAAQ;AAAjD;AAFA,KAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAsBN,IAvBP;AA4BA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC2B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIrB,OAAO,GAAGe,QAAH,GAAcV,SADzB,CADJ;AAKH;;AAED,eAAeV,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { fetchDailyData} from '../../api'\nimport {Line, Bar}  from 'react-chartjs-2'\nimport styles from './Charts.module.css'\n\nfunction Charts({data : {confirmed, deaths, recovered}, country}) {\n\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=> {\n        const fetchAPI = async () => {\n            const ftdata = await fetchDailyData();\n            setDailyData(ftdata)\n        }\n\n        \n    fetchAPI();\n\n    },[]);\n\n    const lineChart = (\n        dailyData.length \n        ? (\n            <Line\n                data= {{\n                    labels: dailyData.map(({date}) => date),\n                    datasets: [{\n                        data: dailyData.map(({confirmed}) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true\n                    },{\n                        data: dailyData.map(({deaths}) => deaths),\n                        label: 'deaths',\n                        borderColor: 'red',\n                        backgroundColor:'rgba(255,0,0,0.5)',\n                        fill: true\n                    }],\n                }}\n        />) : null \n    );\n\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar \n                data = {{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets:[{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255,0, 0, 0.5)'\n                        ], \n                        data:[confirmed.value, recovered.value, deaths.value]\n                    }],\n\n                }}\n                options = {{\n                    legend: {display: false},\n                    title: {display: true, text:`current state in ${country}`}\n\n                }}\n            />\n        ): null\n\n    );\n    \n\n    return (\n        <div className={styles.container}>\n           {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Charts\n"]},"metadata":{},"sourceType":"module"}