{"ast":null,"code":"import axios from 'axios';\nconst url = \"https://covid19.mathdro.id/api\";\nexport const fetchData = async country => {\n  let changableurl = url;\n\n  if (country) {\n    changableurl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(changableurl);\n    const modifiedData = {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await await axios.get(`${url}/daily`);\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n    console.log(modifiedData.map(({\n      date\n    }) => date));\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/infinity/GitHub/COVID-19/src/api/index.js"],"names":["axios","url","fetchData","country","changableurl","data","confirmed","recovered","deaths","lastUpdate","get","modifiedData","error","fetchDailyData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AAExC,MAAIC,YAAY,GAAGH,GAAnB;;AAEA,MAAGE,OAAH,EAAW;AACPC,IAAAA,YAAY,GAAI,GAAEH,GAAI,cAAaE,OAAQ,EAA3C;AACH;;AAED,MAAI;AACA,UAAM;AAACE,MAAAA,IAAI,EAAG;AAACC,QAAAA,SAAD;AAAYC,QAAAA,SAAZ;AAAuBC,QAAAA,MAAvB;AAA+BC,QAAAA;AAA/B;AAAR,QAAsD,MAAMT,KAAK,CAACU,GAAN,CAAUN,YAAV,CAAlE;AACA,UAAMO,YAAY,GAAG;AACjBL,MAAAA,SADiB;AAEjBC,MAAAA,SAFiB;AAGjBC,MAAAA,MAHiB;AAIjBC,MAAAA;AAJiB,KAArB;AAMA,WAAOE,YAAP;AACH,GATD,CASE,OAAOC,KAAP,EAAc,CAEf;AAEJ,CArBM;AAwBP,OAAO,MAAMC,cAAc,GAAI,YAAY;AAEvC,MAAI;AAEA,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAM,MAAML,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,QAAjB,CAA7B;AACA,UAAMU,YAAY,GAAGN,IAAI,CAACS,GAAL,CAAUC,SAAD,KAAgB;AAC1CT,MAAAA,SAAS,EAAES,SAAS,CAACT,SAAV,CAAoBU,KADW;AAE1CR,MAAAA,MAAM,EAAEO,SAAS,CAACP,MAAV,CAAiBQ,KAFiB;AAG1CC,MAAAA,IAAI,EAAEF,SAAS,CAACG;AAH0B,KAAhB,CAAT,CAArB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAY,CAACG,GAAb,CAAiB,CAAC;AAACG,MAAAA;AAAD,KAAD,KAAYA,IAA7B,CAAZ;AACA,WAAON,YAAP;AACH,GAXD,CAWE,OAAOC,KAAP,EAAc,CAEf;AAEJ,CAjBM;AAmBP,OAAO,MAAMS,cAAc,GAAG,YAAY;AAEtC,MAAI;AACA,UAAM;AAAEhB,MAAAA,IAAI,EAAG;AAACiB,QAAAA;AAAD;AAAT,QAAwB,MAAM,MAAMtB,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,YAAjB,CAA1C;AAEA,WAAOqB,SAAS,CAACR,GAAV,CAAeX,OAAD,IAAYA,OAAO,CAACoB,IAAlC,CAAP;AACH,GAJD,CAIE,OAAOX,KAAP,EAAc,CAEf;AACJ,CATM","sourcesContent":["import axios from 'axios'\n\nconst url = \"https://covid19.mathdro.id/api\"\n\n\nexport const fetchData = async (country) => {\n\n    let changableurl = url;\n\n    if(country){\n        changableurl = `${url}/countries/${country}`\n    }\n\n    try {\n        const {data : {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changableurl)\n        const modifiedData = {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate\n        }\n        return modifiedData;\n    } catch (error) {\n        \n    }\n\n}\n\n\nexport const fetchDailyData =  async () => {\n\n    try {\n\n        const { data } = await await axios.get(`${url}/daily`)        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n        console.log(modifiedData.map(({date}) => date))\n        return modifiedData\n    } catch (error) {\n        \n    }\n\n}\n\nexport const fetchCountries = async () => {\n\n    try {\n        const { data : {countries}} = await await axios.get(`${url}/countries`)        \n\n        return countries.map((country)=> country.name)\n    } catch (error) {\n        \n    }\n} "]},"metadata":{},"sourceType":"module"}